//buildscript {
 //   repositories {
  //    mavenCentral()
 //   }

//    dependencies {
//        classpath "com.ullink.gradle:gradle-msbuild-plugin:2.9"
//    }
//}

//apply plugin:'msbuild'
plugins {
  id "com.ullink.msbuild" version "2.10"
}


msbuild {
  // mandatory (one of those)
  solutionFile = 'Tester.sln'
  projectFile = file('Tester/Tester.csproj')
  
  // MsBuild project name (/p:Project=...)
  projectName = 'Tester'
  
  // Verbosity (/v:detailed, by default uses gradle logging level)
  //verbosity = 'detailed'
  
  // targets to execute (/t:Clean;Rebuild, no default)
//  targets = ['Clean', 'Rebuild']
  
  // Below values can override settings from the project file
  
  // overrides project OutputPath
  destinationDir = 'Tester/bin'
  
  // overrides project IntermediaryOutputPath
  intermediateDir = 'Tester/obj'
  
  // Generates XML documentation file (from javadoc through custom DocLet)
  //generateDoc = false
  
  // Other msbuild options can be set:
  // loggerAssembly, generateDoc, debugType, optimize, debugSymbols, configuration, platform, defineConstants ...
  
  // you can also provide properties by name (/p:SomeProperty=Value)
//  parameters.SomeProperty = 'Value'
  
  // Or, if you use built-in msbuild parameters that aren't directly available here,
  // you can take advantage of the ExtensionAware interface
//  ext["flp1"] = "LogFile=" + file("${project.name}.errors.log").path + ";ErrorsOnly;Verbosity=diag"
}

//assemblyInfoPatcher {
  // mandatory if you want to patch your AssemblyInfo.cs/fs
  // TODO: not yet normalized, beware than .Net version must be X.Y.Z.B format, with Z/B optionals
//  version = project.version + '.0.0'

  // defaults to above version, fewer restrictions on the format
//  fileVersion = version + '-Beta'

  // default to msbuild main project (of solution)
//  projects = [ 'MyProject1', 'MyProject2' ]
//}